@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  @apply min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 text-gray-900 dark:text-gray-100;
}

:root {
  --radius: 1rem;
}

@layer components {
  .glass-button {
    @apply backdrop-blur-md bg-white/10 border border-white/20;
    transform-style: preserve-3d;
    border-radius: var(--radius);
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.2),
      rgba(255, 255, 255, 0.1)
    );
  }

  .glass-button:hover {
    @apply bg-white/20;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }

  .glass-button::before {
    content: '';
    @apply absolute inset-0 bg-gradient-to-r from-transparent via-white/5 to-transparent;
    transform: translateZ(-1px);
  }

  .search-input {
    @apply w-full p-4 rounded-xl text-lg;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .search-input-dark {
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  .search-input-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  @keyframes glow {
    0% {
      box-shadow: 0 0 5px rgba(76, 130, 251, 0.5),
                  0 0 20px rgba(76, 130, 251, 0.3),
                  inset 0 0 15px rgba(76, 130, 251, 0.1);
      border-color: rgba(76, 130, 251, 0.5);
    }
    100% {
      box-shadow: 0 0 10px rgba(76, 130, 251, 0.8),
                  0 0 30px rgba(76, 130, 251, 0.5),
                  inset 0 0 25px rgba(76, 130, 251, 0.2);
      border-color: rgba(76, 130, 251, 0.8);
    }
  }

  .movie-card {
    @apply rounded-[var(--radius)] overflow-hidden;
  }

  .cart-panel {
    @apply rounded-l-[var(--radius)];
  }

  .input-rounded {
    @apply rounded-[calc(var(--radius)-0.25rem)];
  }

  .scroll-transition {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s ease-out;
  }

  .scroll-transition.visible {
    opacity: 1;
    transform: translateY(0);
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-in-up {
    animation: fadeInUp 0.6s ease-out forwards;
  }

  @keyframes float-rotate {
    0% {
      transform: translateY(0) rotate(0deg);
    }
    50% {
      transform: translateY(-10px) rotate(5deg);
    }
    100% {
      transform: translateY(0) rotate(0deg);
    }
  }

  .category-card-hover {
    @apply relative overflow-hidden;
  }

  .category-card-hover::after {
    content: '';
    @apply absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent;
    transform: translateX(-100%);
    animation: shine 2s infinite;
  }

  .collection-card {
    @apply relative overflow-hidden rounded-xl transition-all duration-500;
  }

  .collection-card::before {
    content: '';
    @apply absolute inset-0 bg-black/20 opacity-0 transition-opacity duration-300;
  }

  .collection-card:hover::before {
    @apply opacity-100;
  }

  @keyframes shimmer {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  .shimmer {
    animation: shimmer 2s infinite;
  }

  .highlight {
    transition: all 500ms;
    background-color: rgb(243, 232, 255);
    transform: scale(1.05);
    z-index: 10;
    box-shadow: 0 0 0 2px rgb(168, 85, 247);
  }
}

.dark {
  --foreground: 255, 255, 255;
  --background: 10, 10, 10;
}

.dark body {
  color: rgb(var(--foreground));
  background: rgb(var(--background));
}

.dark .text-gray-600 {
  color: rgb(209 213 219);
}

.dark .text-gray-500 {
  color: rgb(156 163 175);
}

.dark .bg-white {
  background-color: rgb(17 24 39);
}

.dark .prose {
  color: rgb(229 231 235);
}

.dark .prose h1,
.dark .prose h2,
.dark .prose h3 {
  color: rgb(255 255 255);
}

/* Add these custom utilities */
.perspective-1000 {
  perspective: 1000px;
}

.preserve-3d {
  transform-style: preserve-3d;
}

.backface-hidden {
  backface-visibility: hidden;
}

/* Add these utility classes for 3D transforms */


.backface-hidden {
  backface-visibility: hidden;
}

.translate-z-0 {
  transform: translateZ(0px);
}

.translate-z-\[100px\] {
  transform: translateZ(100px);
}

/* Optional: Add a subtle gradient overlay to the disc */
.disc-gradient::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0.3));
  border-radius: inherit;
}

/* Add these for 3D transforms */
.rotate-y-[-20deg] {
  transform: rotateY(-20deg);
}

.transform-style-preserve-3d {
  transform-style: preserve-3d;
}

.backface-visibility-hidden {
  backface-visibility: hidden;
}

@keyframes shine {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.animate-shine {
  animation: shine 4s linear infinite;
}

.bg-grid {
  background-size: 4rem 4rem;
  background-image: 
    linear-gradient(to right, rgb(255 255 255 / 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgb(255 255 255 / 0.1) 1px, transparent 1px);
}

@layer utilities {
  .hover-glow {
    @apply transition-all duration-300;
  }
  
  .hover-glow:hover {
    @apply shadow-[0_0_15px_rgba(59,130,246,0.5)];
    transform: translateY(-2px);
  }

  .hover-scale {
    @apply transition-transform duration-300;
  }
  
  .hover-scale:hover {
    @apply scale-105;
  }

  .hover-lift {
    @apply transition-all duration-300;
  }
  
  .hover-lift:hover {
    @apply -translate-y-1 shadow-lg;
  }
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  100% {
    transform: translateY(-10px);
  }
}

@keyframes shine {
  0% {
    background-position: 200% 50%;
  }
  100% {
    background-position: -200% 50%;
  }
}

.hover-shine {
  position: relative;
  overflow: hidden;
}

.hover-shine::after {
  content: '';
  position: absolute;
  inset: 0;
  transform: translateX(-100%);
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  animation: shine 2s infinite;
}

@keyframes spin-slow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes spin-slow-reverse {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

.animate-spin-slow {
  animation: spin-slow 30s linear infinite;
}

.animate-spin-slow-reverse {
  animation: spin-slow-reverse 25s linear infinite;
}

@keyframes spin-faster {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes spin-reverse-faster {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

@keyframes wave {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes pulse-slow {
  0%, 100% {
    opacity: 0.5;
  }
  50% {
    opacity: 0.8;
  }
}

.animate-spin-faster {
  animation: spin-faster 15s linear infinite;
}

.animate-spin-reverse-faster {
  animation: spin-reverse-faster 12s linear infinite;
}

.animate-wave {
  animation: wave 8s ease-in-out infinite;
}

.animate-pulse-slow {
  animation: pulse-slow 4s ease-in-out infinite;
}

@keyframes grid-fade {
  0% { opacity: 0.3; }
  50% { opacity: 0.1; }
  100% { opacity: 0.3; }
}

.animate-grid-fade {
  animation: grid-fade 8s infinite;
}

.bg-grid {
  background-size: 40px 40px;
  background-image: linear-gradient(to right, rgba(255,255,255,0.1) 1px, transparent 1px),
                    linear-gradient(to bottom, rgba(255,255,255,0.1) 1px, transparent 1px);
}


